/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui_elementos.feature.view;

import gui_elementos.feature.control.FeatureControl;
import gui_elementos.feature.utils.FileControl;
import gui_elementos.feature.vo.Gherkin;
import javax.swing.JFrame;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mtptulamac007
 */
public class GUIElements extends JFrame {

    /**
     * Modelo para JTable
     */
    public DefaultTableModel model;
    private FeatureControl featureControl;

    /**
     * Creates new form GUIElements
     */
    public GUIElements() {
        initComponents();
        iniTabla("Tag,Name,Factible,Outline,Manual".split(","));
        setLocationRelativeTo(null);
        setEnableBtn(false);

    }

    private void setEnableBtn(boolean flag) {
        listOptios.setEnabled(flag);
    }

    private void setData() {
        txtFactible.setText("");
        txtManual.setText(String.valueOf(featureControl.gherkinsManuales()));
        txtOutline.setText(String.valueOf(featureControl.gherkinsOutline()));
        txtOtros.setText("");
    }

    private void iniTabla(String[] headers) {

        model = new DefaultTableModel();
        model.setColumnIdentifiers(headers);
        tbInfo.setModel(model);

    }
    private boolean isFac(boolean fac, boolean manual){
        if(fac){
            return !manual;
        }else{
            return false;
        }
    }
    private String validaFact(boolean fac, boolean manual){
        String  temp = "";
        if(fac){
            if(manual){
                temp = "Manual";
            }else{
                temp = "Si";
            }
        }else{
            temp = "Error";
        }
        return temp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPanel = new javax.swing.JPanel();
        btnSelectFile = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        listOptios = new javax.swing.JComboBox<>();
        elementInfoPanel = new javax.swing.JPanel();
        lbFactibles = new javax.swing.JLabel();
        lbManual = new javax.swing.JLabel();
        lbOuline = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFactible = new javax.swing.JLabel();
        txtManual = new javax.swing.JLabel();
        txtOutline = new javax.swing.JLabel();
        txtOtros = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbInfo = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtShow = new javax.swing.JTextArea();
        menuPanel1 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        lbNameFeature = new javax.swing.JLabel();
        txtNameFeature = new javax.swing.JLabel();
        lbTotalGherkins = new javax.swing.JLabel();
        txtTotalGherkins = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        panelConsola = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createTitledBorder(null, "Menu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(34, 58, 77)))); // NOI18N

        btnSelectFile.setText("Abrir archivo");
        btnSelectFile.setPreferredSize(new java.awt.Dimension(98, 23));
        btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFileActionPerformed(evt);
            }
        });

        listOptios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Todos", "Facibles", "Manual", "Outline" }));
        listOptios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listOptiosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listOptios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSelectFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listOptios, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        elementInfoPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createTitledBorder(null, "Feature Informaci√≥n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(34, 58, 77)))); // NOI18N
        elementInfoPanel.setPreferredSize(new java.awt.Dimension(186, 208));
        elementInfoPanel.setRequestFocusEnabled(false);
        elementInfoPanel.setSize(new java.awt.Dimension(42, 37));

        lbFactibles.setText("# Factibles");

        lbManual.setText("# Manual ");

        lbOuline.setText("# Outline");

        jLabel6.setText("# Otros");

        txtFactible.setFont(txtFactible.getFont().deriveFont(txtFactible.getFont().getStyle() | java.awt.Font.BOLD));
        txtFactible.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtFactible.setText("NAME");
        txtFactible.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        txtFactible.setSize(new java.awt.Dimension(42, 17));

        txtManual.setFont(txtManual.getFont().deriveFont(txtManual.getFont().getStyle() | java.awt.Font.BOLD));
        txtManual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtManual.setText("NAME");
        txtManual.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        txtManual.setSize(new java.awt.Dimension(42, 17));

        txtOutline.setFont(txtOutline.getFont().deriveFont(txtOutline.getFont().getStyle() | java.awt.Font.BOLD));
        txtOutline.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtOutline.setText("NAME");
        txtOutline.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        txtOutline.setSize(new java.awt.Dimension(42, 17));

        txtOtros.setFont(txtOtros.getFont().deriveFont(txtOtros.getFont().getStyle() | java.awt.Font.BOLD));
        txtOtros.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtOtros.setText("txtOtros");
        txtOtros.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        txtOtros.setSize(new java.awt.Dimension(42, 17));

        javax.swing.GroupLayout elementInfoPanelLayout = new javax.swing.GroupLayout(elementInfoPanel);
        elementInfoPanel.setLayout(elementInfoPanelLayout);
        elementInfoPanelLayout.setHorizontalGroup(
            elementInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(elementInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(elementInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(elementInfoPanelLayout.createSequentialGroup()
                        .addComponent(lbManual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtManual, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(elementInfoPanelLayout.createSequentialGroup()
                        .addComponent(lbFactibles)
                        .addGap(18, 18, 18)
                        .addComponent(txtFactible, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(elementInfoPanelLayout.createSequentialGroup()
                        .addComponent(lbOuline)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtOutline, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(elementInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtOtros, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        elementInfoPanelLayout.setVerticalGroup(
            elementInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(elementInfoPanelLayout.createSequentialGroup()
                .addGroup(elementInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFactibles)
                    .addComponent(txtFactible))
                .addGap(18, 18, 18)
                .addGroup(elementInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbManual)
                    .addComponent(txtManual))
                .addGap(18, 18, 18)
                .addGroup(elementInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOuline)
                    .addComponent(txtOutline))
                .addGap(18, 18, 18)
                .addGroup(elementInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, elementInfoPanelLayout.createSequentialGroup()
                        .addComponent(txtOtros)
                        .addContainerGap())))
        );

        tbInfo.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(tbInfo);

        txtShow.setEditable(false);
        txtShow.setColumns(20);
        txtShow.setLineWrap(true);
        txtShow.setRows(5);
        jScrollPane2.setViewportView(txtShow);

        menuPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createTitledBorder(null, "Informaci√≥n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(34, 58, 77)))); // NOI18N

        lbNameFeature.setText("# Nombre Feature:");

        txtNameFeature.setFont(txtNameFeature.getFont().deriveFont(txtNameFeature.getFont().getStyle() | java.awt.Font.BOLD));
        txtNameFeature.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNameFeature.setText("NAME");
        txtNameFeature.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lbTotalGherkins.setText("# Total gherkins:");

        txtTotalGherkins.setFont(txtTotalGherkins.getFont().deriveFont(txtTotalGherkins.getFont().getStyle() | java.awt.Font.BOLD));
        txtTotalGherkins.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTotalGherkins.setText("NAME");
        txtTotalGherkins.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        txtTotalGherkins.setSize(new java.awt.Dimension(42, 17));

        javax.swing.GroupLayout menuPanel1Layout = new javax.swing.GroupLayout(menuPanel1);
        menuPanel1.setLayout(menuPanel1Layout);
        menuPanel1Layout.setHorizontalGroup(
            menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTotalGherkins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNameFeature, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(menuPanel1Layout.createSequentialGroup()
                        .addGroup(menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNameFeature)
                            .addComponent(lbTotalGherkins))
                        .addGap(0, 56, Short.MAX_VALUE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        menuPanel1Layout.setVerticalGroup(
            menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbNameFeature)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNameFeature, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTotalGherkins)
                .addGap(18, 18, 18)
                .addComponent(txtTotalGherkins, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelConsola.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createTitledBorder(null, "Detalles consola", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 12)))); // NOI18N

        txtConsola.setColumns(20);
        txtConsola.setRows(5);
        jScrollPane3.setViewportView(txtConsola);
        txtConsola.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout panelConsolaLayout = new javax.swing.GroupLayout(panelConsola);
        panelConsola.setLayout(panelConsolaLayout);
        panelConsolaLayout.setHorizontalGroup(
            panelConsolaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        panelConsolaLayout.setVerticalGroup(
            panelConsolaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jScrollPane3.getAccessibleContext().setAccessibleParent(jSeparator3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(menuPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(elementInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelConsola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menuPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(elementInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(panelConsola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFileActionPerformed
        // TODO add your handling code here:
        txtShow.setText(null);
        txtShow.setText(new FileControl().mostrarContenido(this));
        featureControl = new FeatureControl(txtShow.getText());
        featureControl.show("NAME_FEATURE");
        featureControl.show("TOTAL_GHERKINS");

        txtNameFeature.setText(featureControl.getNameFeature());
        txtTotalGherkins.setText(String.valueOf(featureControl.totalGherkins()));
        setData();
        setEnableBtn(true);
        listOptios.setSelectedItem("Todos");

    }//GEN-LAST:event_btnSelectFileActionPerformed


    private void listOptiosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listOptiosItemStateChanged
        // TODO add your handling code here:

        switch ((String) listOptios.getSelectedItem()) {
            case "Todos" -> {
                iniTabla("Tag,Name,Factible,Outline,Manual".split(","));
                /*
                for (GherkinManual item : featureControl.listGherkinManual()) {
                    model.addRow(new Object[]{item.getTag(), item.getName(), !item.isIsManual() ? "Si" : "No", item.isIsOutline(), item.getJira()});
                }*/
                for (Gherkin item : featureControl.listGherkin()) {
                    if (item.isIsOutline()) {
                        for (String i : featureControl.expandScenarioOutlines(item.getBlok())) {
                            model.addRow(new Object[]{
                                item.getTag(), 
                                i, 
                                validaFact(item.isIsFactible(),item.isIsManual()), 
                                item.isIsOutline(),
                                item.getJira()
                            });
                            txtConsola.append(i + "\n");
                            System.out.println(i);
                        }
                    } else {
                        model.addRow(new Object[]{item.getTag(), item.getName(), 
                            validaFact(item.isIsFactible(),item.isIsManual()),
                            item.isIsOutline(), item.getJira()});
                    }

                }

            }
            case "Facibles" -> {
                iniTabla("Tag,Name,Factible,Outline".split(","));
                for (Gherkin item : featureControl.listGherkin()) {
                    if (isFac(item.isIsFactible(), item.isIsManual())) {
                        if (item.isIsOutline()) {
                            for (String i : featureControl.expandScenarioOutlines(item.getBlok())) {
                                model.addRow(new Object[]{item.getTag(), i, validaFact(item.isIsFactible(),item.isIsManual()), 
                                    item.isIsOutline()});
                                txtConsola.append(i + "\n");
                                System.out.println(i);
                            }
                        } else {
                            model.addRow(new Object[]{item.getTag(), item.getName(), validaFact(item.isIsFactible(),item.isIsManual()),
                                item.isIsOutline()});
                        }
                    }
                }
                
                txtFactible.setText(tbInfo.getRowCount()+"");
            }
            case "Manual" -> {
                iniTabla("Tag,Name,Factible,Outline,Manual".split(","));
                for (Gherkin item : featureControl.listGherkin()) {
                    if (item.isIsManual()) {
                        if (item.isIsOutline()) {
                            for (String i : featureControl.expandScenarioOutlines(item.getBlok())) {
                                model.addRow(new Object[]{item.getTag(), i, validaFact(item.isIsFactible(),item.isIsManual()), item.isIsOutline(), item.getJira()});
                                txtConsola.append(i + "\n");
                                System.out.println(i);
                            }
                        } else {
                            model.addRow(new Object[]{item.getTag(), item.getName(), validaFact(item.isIsFactible(),item.isIsManual()),
                                item.isIsOutline(), item.getJira()});
                        }
                    }
                }

            }
            case "Outline" -> {
                iniTabla("Tag,Name,Factible,Outline,Manual".split(","));

                for (Gherkin item : featureControl.listGherkin()) {
                    if (item.isIsOutline()) {
                        for (String i : featureControl.expandScenarioOutlines(item.getBlok())) {
                            model.addRow(new Object[]{item.getTag(), i, validaFact(item.isIsFactible(),item.isIsManual()), item.getJira()});
                            txtConsola.append(i + "\n");
                            System.out.println(i);
                        }

                    }
                }

            }
           
        }
    }//GEN-LAST:event_listOptiosItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIElements().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JPanel elementInfoPanel;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lbFactibles;
    private javax.swing.JLabel lbManual;
    private javax.swing.JLabel lbNameFeature;
    private javax.swing.JLabel lbOuline;
    private javax.swing.JLabel lbTotalGherkins;
    private javax.swing.JComboBox<String> listOptios;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel menuPanel1;
    private javax.swing.JPanel panelConsola;
    private javax.swing.JTable tbInfo;
    private javax.swing.JTextArea txtConsola;
    private javax.swing.JLabel txtFactible;
    private javax.swing.JLabel txtManual;
    private javax.swing.JLabel txtNameFeature;
    private javax.swing.JLabel txtOtros;
    private javax.swing.JLabel txtOutline;
    private javax.swing.JTextArea txtShow;
    private javax.swing.JLabel txtTotalGherkins;
    // End of variables declaration//GEN-END:variables
}
